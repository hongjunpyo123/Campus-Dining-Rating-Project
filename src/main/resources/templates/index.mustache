<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>대진대학교 식단표</title>
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; background: #f5f7fa; background-image: radial-gradient(circle at 20% 30%, rgba(99, 102, 241, 0.05) 0%, transparent 50%), radial-gradient(circle at 80% 70%, rgba(168, 85, 247, 0.04) 0%, transparent 50%); color: #1a202c; line-height: 1.6; min-height: 100vh; }
    .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
    .header { text-align: center; margin-bottom: 40px; animation: fadeInDown 0.8s ease; }
    .header h1 { font-size: 2.8rem; font-weight: 800; margin-bottom: 8px; color: #1a202c; }
    .header p { color: #64748b; font-size: 1.1rem; margin-bottom: 24px; }

    .restaurant-showcase { position: relative; max-width: 600px; margin: 0 auto 20px; border-radius: 20px; overflow: hidden; box-shadow: 0 12px 40px rgba(0,0,0,0.1); transition: all 0.3s ease; }
    .restaurant-showcase:hover { transform: translateY(-4px); box-shadow: 0 20px 60px rgba(0,0,0,0.15); }
    .restaurant-image { width: 100%; height: 280px; object-fit: cover; display: block; transition: transform 0.3s ease; }
    .restaurant-showcase:hover .restaurant-image { transform: scale(1.05); }
    .image-overlay { position: absolute; bottom: 0; left: 0; right: 0; background: linear-gradient(transparent, rgba(0,0,0,0.7)); color: white; padding: 24px; text-align: center; }
    .image-overlay h3 { font-size: 1.3rem; font-weight: 700; text-shadow: 0 2px 4px rgba(0,0,0,0.5); }

    .day-tabs { display: flex; justify-content: center; gap: 8px; margin-bottom: 30px; }
    .day-tab { background: white; border: 2px solid #e2e8f0; color: #64748b; padding: 12px 24px; border-radius: 30px; cursor: pointer; font-weight: 600; transition: all 0.3s ease; box-shadow: 0 2px 8px rgba(0,0,0,0.1); }
    .day-tab:hover { border-color: #6366f1; transform: translateY(-2px); box-shadow: 0 4px 16px rgba(99,102,241,0.2); }
    .day-tab.active { background: #6366f1; color: white; border-color: #6366f1; transform: translateY(-2px); box-shadow: 0 8px 25px rgba(99,102,241,0.4); }

    .day-content { background: white; border-radius: 16px; padding: 24px; box-shadow: 0 4px 20px rgba(0,0,0,0.08); border: 1px solid #f1f5f9; animation: fadeIn 0.5s ease; position: relative; }
    .day-content::before { content: ''; position: absolute; top: 0; left: 0; right: 0; height: 4px; background: #6366f1; border-radius: 16px 16px 0 0; }
    .day-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; padding-bottom: 16px; border-bottom: 1px solid #f1f5f9; }
    .day-title { font-size: 1.5rem; font-weight: 700; color: #1a202c; }

    .rating-section { display: flex; align-items: center; gap: 8px; padding: 8px 16px; background: #f8fafc; border-radius: 20px; border: 1px solid #e2e8f0; transition: all 0.3s ease; }
    .rating-section.loading { background: #f1f5f9; }
    .rating-section.loaded { background: #fef3c7; border-color: #f59e0b; }
    .rating-section.error { background: #fef2f2; border-color: #fca5a5; }
    .stars { display: flex; gap: 2px; }
    .star { width: 16px; height: 16px; fill: #e2e8f0; transition: all 0.3s ease; }
    .star.filled { fill: #fbbf24; filter: drop-shadow(0 1px 2px rgba(251,191,36,0.3)); }
    .rating-text { font-size: 0.85rem; color: #64748b; font-weight: 500; min-width: 80px; }
    .rating-text.loaded { color: #92400e; font-weight: 600; }
    .rating-text.error { color: #dc2626; }

    .card-stack-container { display: flex; justify-content: center; position: relative; height: 400px; margin: 20px 0; }
    .restaurants-grid { position: relative; width: 340px; height: 100%; }
    .restaurant-card {
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 20px;
      padding: 24px;
      transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      box-shadow: 0 8px 30px rgba(0,0,0,0.12);
      cursor: pointer;
      user-select: none;
      transform-origin: center bottom;
    }
    .restaurant-card:nth-child(1) { background: linear-gradient(135deg, #fef3f2 0%, #fff5f5 100%); z-index: 10; transform: translateY(0px) scale(1); }
    .restaurant-card:nth-child(2) { background: linear-gradient(135deg, #f0f9ff 0%, #f8fafc 100%); z-index: 9; transform: translateY(-8px) scale(0.98); }
    .restaurant-card:nth-child(3) { background: linear-gradient(135deg, #f0fdf4 0%, #f7fee7 100%); z-index: 8; transform: translateY(-16px) scale(0.96); }
    .restaurant-card:nth-child(4) { background: linear-gradient(135deg, #fefce8 0%, #fffbeb 100%); z-index: 7; transform: translateY(-24px) scale(0.94); }
    .restaurant-card:nth-child(5) { background: linear-gradient(135deg, #fdf4ff 0%, #faf5ff 100%); z-index: 6; transform: translateY(-32px) scale(0.92); }

    .restaurant-card.active {
      z-index: 15;
      transform: translateY(-10px) scale(1.02);
      box-shadow: 0 20px 40px rgba(0,0,0,0.2);
    }
    .restaurant-card:hover { transform: translateY(-5px) scale(1.01); box-shadow: 0 15px 35px rgba(0,0,0,0.15); }

    .restaurant-header { text-align: center; margin-bottom: 16px; }
    .restaurant-title { font-size: 1.2rem; font-weight: 700; color: #1e293b; margin-bottom: 8px; }
    .price-badge { background: #6366f1; color: white; padding: 8px 16px; border-radius: 20px; font-size: 0.9rem; font-weight: 600; display: inline-block; }

    .tray-container { display: flex; justify-content: center; margin: 20px 0; }
    .food-tray { width: 280px; height: 200px; background: #f8fafc; border: 2px solid #cbd5e1; border-radius: 12px; display: grid; grid-template-columns: 2fr 1fr 1fr; grid-template-rows: 1fr 1fr; gap: 3px; padding: 8px; }
    .menu-section { background: white; border: 1px solid #d1d5db; padding: 6px; display: flex; flex-direction: column; justify-content: flex-start; align-items: center; border-radius: 6px; }
    .menu-section.main-dish { grid-row: span 2; border-radius: 8px 4px 4px 8px; }
    .menu-item-text { background: #ede9fe; border-radius: 8px; padding: 3px 6px; margin: 2px 0; border: 1px solid #c4b5fd; transition: all 0.2s ease; font-size: 0.7rem; text-align: center; width: 100%; word-break: break-word; line-height: 1.2; min-height: 20px; display: flex; align-items: center; justify-content: center; color: #5b21b6; font-weight: 500; }
    .menu-item-text:hover { background: #6366f1; color: white; transform: scale(1.02); }
    .menu-item-text.empty { background: transparent; color: #9ca3af; border: 1px dashed #d1d5db; font-style: italic; }

    .card-controls {
      display: flex;
      justify-content: center;
      gap: 12px;
      margin-top: 20px;
    }
    .card-nav-btn {
      width: 44px;
      height: 44px;
      border-radius: 50%;
      border: none;
      background: #6366f1;
      color: white;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.3s ease;
      box-shadow: 0 4px 12px rgba(99,102,241,0.3);
    }
    .card-nav-btn:hover {
      background: #4f46e5;
      transform: scale(1.1);
      box-shadow: 0 6px 20px rgba(99,102,241,0.4);
    }
    .card-nav-btn:disabled {
      background: #cbd5e1;
      cursor: not-allowed;
      transform: scale(1);
      box-shadow: none;
    }

    .card-indicators {
      display: flex;
      justify-content: center;
      gap: 8px;
      margin-top: 12px;
    }
    .card-indicator {
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: #cbd5e1;
      transition: all 0.3s ease;
      cursor: pointer;
    }
    .card-indicator.active {
      background: #6366f1;
      transform: scale(1.2);
    }

    .no-menu { text-align: center; color: #9ca3af; font-style: italic; padding: 40px; background: #f9fafb; border: 2px dashed #d1d5db; border-radius: 16px; }

    .skeleton { background: white; border-radius: 16px; padding: 24px; box-shadow: 0 4px 20px rgba(0,0,0,0.08); border: 1px solid #f1f5f9; }
    .skeleton-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; padding-bottom: 16px; border-bottom: 1px solid #f1f5f9; }
    .skeleton-loading { background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%); background-size: 200% 100%; animation: loading 1.5s infinite; border-radius: 8px; }
    .skeleton-title { height: 28px; width: 100px; border-radius: 14px; }
    .skeleton-rating { height: 24px; width: 120px; border-radius: 12px; }
    .skeleton-restaurants { display: grid; grid-template-columns: repeat(auto-fit, minmax(320px, 1fr)); gap: 20px; }
    .skeleton-restaurant { background: white; border-radius: 16px; padding: 20px; box-shadow: 0 4px 20px rgba(0,0,0,0.08); }
    .skeleton-restaurant-header { text-align: center; margin-bottom: 16px; }
    .skeleton-restaurant-title { height: 20px; width: 120px; border-radius: 10px; margin: 0 auto 8px; }
    .skeleton-price { height: 24px; width: 80px; border-radius: 12px; margin: 0 auto; }
    .skeleton-tray { width: 280px; height: 200px; background: #f8fafc; border: 2px solid #cbd5e1; border-radius: 12px; display: grid; grid-template-columns: 2fr 1fr 1fr; grid-template-rows: 1fr 1fr; gap: 3px; padding: 8px; margin: 20px auto; }
    .skeleton-menu-section { background: white; border: 1px solid #d1d5db; border-radius: 6px; padding: 6px; display: flex; flex-direction: column; gap: 2px; }
    .skeleton-menu-item-text { height: 16px; border-radius: 6px; margin: 1px 0; }

    .refresh-btn { position: fixed; bottom: 30px; right: 30px; width: 56px; height: 56px; background: #6366f1; border: none; border-radius: 50%; color: white; cursor: pointer; box-shadow: 0 8px 25px rgba(99,102,241,0.4); transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); display: flex; align-items: center; justify-content: center; z-index: 100; }
    .refresh-btn:hover { transform: scale(1.1) rotate(180deg); box-shadow: 0 12px 35px rgba(99,102,241,0.5); }
    .refresh-icon { width: 20px; height: 20px; fill: currentColor; }

    @keyframes loading { 0% { background-position: 200% 0; } 100% { background-position: -200% 0; } }
    @keyframes fadeInDown { from { opacity: 0; transform: translateY(-30px); } to { opacity: 1; transform: translateY(0); } }
    @keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }

    @media (max-width: 768px) {
      .container { padding: 15px; }
      .header h1 { font-size: 2.2rem; }
      .restaurant-showcase { max-width: 100%; }
      .restaurant-image { height: 240px; }
      .day-tabs { flex-wrap: wrap; }
      .day-tab { padding: 10px 20px; font-size: 0.9rem; }
      .restaurants-grid { width: 300px; }
      .card-stack-container { height: 380px; }
      .food-tray { width: 260px; height: 180px; }
      .menu-item-text { font-size: 0.65rem; padding: 2px 4px; }
      .refresh-btn { bottom: 20px; right: 20px; width: 50px; height: 50px; }
    }

    @media (max-width: 480px) {
      .restaurant-image { height: 200px; }
      .image-overlay { padding: 16px; }
      .image-overlay h3 { font-size: 1.1rem; }
      .day-header { flex-direction: column; align-items: flex-start; gap: 12px; }
      .rating-section { align-self: flex-end; }
      .restaurants-grid { width: 280px; }
      .card-stack-container { height: 360px; }
      .food-tray { width: 240px; height: 160px; }
      .menu-item-text { font-size: 0.6rem; padding: 2px 3px; }
    }
  </style>
</head>
<body>
<div class="container">
  <div class="header">
    <h1>대진대학교 식단표</h1>
    <p>이번 주 학생식당 메뉴와 AI 평점을 확인하세요</p>

    <div class="restaurant-showcase">
      <img class="restaurant-image" src="https://www.daejin.ac.kr/sites/daejin/atchmnfl_mngr/diet/2/temp_1691400781943100.jpg" alt="대진대학교 학생식당 내부">
      <div class="image-overlay">
        <h3>대진대학교 학생식당</h3>
      </div>
    </div>
  </div>

  <div class="day-tabs">
    <div class="day-tab" data-day="월요일">월</div>
    <div class="day-tab" data-day="화요일">화</div>
    <div class="day-tab" data-day="수요일">수</div>
    <div class="day-tab" data-day="목요일">목</div>
    <div class="day-tab" data-day="금요일">금</div>
  </div>

  <div id="contentContainer">
    <div id="skeleton" class="skeleton">
      <div class="skeleton-header">
        <div class="skeleton-loading skeleton-title"></div>
        <div class="skeleton-loading skeleton-rating"></div>
      </div>
      <div class="skeleton-restaurants">
        <div class="skeleton-restaurant">
          <div class="skeleton-restaurant-header">
            <div class="skeleton-loading skeleton-restaurant-title"></div>
            <div class="skeleton-loading skeleton-price"></div>
          </div>
          <div class="skeleton-tray">
            <div class="skeleton-menu-section"><div class="skeleton-loading skeleton-menu-item-text"></div><div class="skeleton-loading skeleton-menu-item-text"></div></div>
            <div class="skeleton-menu-section"><div class="skeleton-loading skeleton-menu-item-text"></div></div>
            <div class="skeleton-menu-section"><div class="skeleton-loading skeleton-menu-item-text"></div></div>
            <div class="skeleton-menu-section"><div class="skeleton-loading skeleton-menu-item-text"></div></div>
            <div class="skeleton-menu-section"><div class="skeleton-loading skeleton-menu-item-text"></div></div>
          </div>
        </div>
        <div class="skeleton-restaurant">
          <div class="skeleton-restaurant-header">
            <div class="skeleton-loading skeleton-restaurant-title"></div>
            <div class="skeleton-loading skeleton-price"></div>
          </div>
          <div class="skeleton-tray">
            <div class="skeleton-menu-section"><div class="skeleton-loading skeleton-menu-item-text"></div></div>
            <div class="skeleton-menu-section"><div class="skeleton-loading skeleton-menu-item-text"></div></div>
            <div class="skeleton-menu-section"><div class="skeleton-loading skeleton-menu-item-text"></div></div>
            <div class="skeleton-menu-section"><div class="skeleton-loading skeleton-menu-item-text"></div></div>
            <div class="skeleton-menu-section"><div class="skeleton-loading skeleton-menu-item-text"></div></div>
          </div>
        </div>
      </div>
    </div>

    <div id="dayContent" class="day-content" style="display: none;"></div>
  </div>
</div>

<button class="refresh-btn" onclick="loadMenuData()">
  <svg class="refresh-icon" viewBox="0 0 24 24">
    <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"/>
  </svg>
</button>

<script>
  const dayApiMapping = { '월요일': 'monday', '화요일': 'tuesday', '수요일': 'wednesday', '목요일': 'thursday', '금요일': 'friday' };
  let menuData = null;
  let currentDay = '';
  let currentCardIndex = 0;

  function getTodayKorean() {
    const days = ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'];
    const today = days[new Date().getDay()];
    return dayApiMapping[today] ? today : '월요일';
  }

  function filterMenuItems(menuItems) {
    if (!menuItems) return [];
    return menuItems.filter(item => !/[\u4e00-\u9fff]/.test(item));
  }

  function distributeMenuItems(menuItems) {
    const sections = [[], [], [], [], []];
    if (!menuItems || menuItems.length === 0) return sections;
    menuItems.forEach((item, index) => sections[index % 5].push(item));
    return sections;
  }

  function createStars(rating = 0) {
    const starsContainer = document.createElement('div');
    starsContainer.className = 'stars';
    for (let i = 1; i <= 5; i++) {
      const star = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
      star.setAttribute('class', `star ${i <= rating ? 'filled' : ''}`);
      star.setAttribute('viewBox', '0 0 24 24');
      const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');
      path.setAttribute('d', 'M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z');
      star.appendChild(path);
      starsContainer.appendChild(star);
    }
    return starsContainer;
  }

  function updateStars(starsContainer, rating) {
    const stars = starsContainer.querySelectorAll('.star');
    stars.forEach((star, index) => {
      if (index < rating) star.classList.add('filled');
      else star.classList.remove('filled');
    });
  }

  function updateCardStack(totalCards) {
    const cards = document.querySelectorAll('.restaurant-card');
    const prevBtn = document.querySelector('.prev-btn');
    const nextBtn = document.querySelector('.next-btn');
    const indicators = document.querySelectorAll('.card-indicator');

    cards.forEach((card, index) => {
      card.classList.remove('active');
      if (index === currentCardIndex) {
        card.classList.add('active');
        card.style.zIndex = 15;
      } else {
        const offset = Math.abs(index - currentCardIndex);
        card.style.zIndex = 10 - offset;
      }
    });

    if (prevBtn) prevBtn.disabled = currentCardIndex === 0;
    if (nextBtn) nextBtn.disabled = currentCardIndex === totalCards - 1;

    indicators.forEach((indicator, index) => {
      indicator.classList.toggle('active', index === currentCardIndex);
    });
  }

  function nextCard(totalCards) {
    if (currentCardIndex < totalCards - 1) {
      currentCardIndex++;
      updateCardStack(totalCards);
    }
  }

  function prevCard() {
    if (currentCardIndex > 0) {
      currentCardIndex--;
      updateCardStack(document.querySelectorAll('.restaurant-card').length);
    }
  }

  function goToCard(index) {
    currentCardIndex = index;
    updateCardStack(document.querySelectorAll('.restaurant-card').length);
  }

  function renderDayContent(dayData) {
    const container = document.getElementById('dayContent');
    container.innerHTML = '';

    const dayHeader = document.createElement('div');
    dayHeader.className = 'day-header';

    const dayTitle = document.createElement('div');
    dayTitle.className = 'day-title';
    dayTitle.textContent = dayData.dotw;

    const ratingSection = document.createElement('div');
    ratingSection.className = 'rating-section loading';

    const stars = createStars(0);
    const ratingText = document.createElement('span');
    ratingText.className = 'rating-text';
    ratingText.textContent = 'AI 평가 중...';

    ratingSection.appendChild(stars);
    ratingSection.appendChild(ratingText);
    dayHeader.appendChild(dayTitle);
    dayHeader.appendChild(ratingSection);
    container.appendChild(dayHeader);

    if (!dayData.menus || dayData.menus.length === 0) {
      const noMenu = document.createElement('div');
      noMenu.className = 'no-menu';
      noMenu.textContent = '운영하지 않습니다';
      container.appendChild(noMenu);
    } else {
      currentCardIndex = 0;

      const stackContainer = document.createElement('div');
      stackContainer.className = 'card-stack-container';

      const restaurantsGrid = document.createElement('div');
      restaurantsGrid.className = 'restaurants-grid';

      dayData.menus.forEach(menu => {
        if (!menu.title) return;

        const restaurantCard = document.createElement('div');
        restaurantCard.className = 'restaurant-card';

        const restaurantHeader = document.createElement('div');
        restaurantHeader.className = 'restaurant-header';

        const restaurantTitle = document.createElement('div');
        restaurantTitle.className = 'restaurant-title';
        restaurantTitle.textContent = menu.title;
        restaurantHeader.appendChild(restaurantTitle);

        if (menu.price) {
          const priceBadge = document.createElement('div');
          priceBadge.className = 'price-badge';
          priceBadge.textContent = `${menu.price}원`;
          restaurantHeader.appendChild(priceBadge);
        }

        restaurantCard.appendChild(restaurantHeader);

        const trayContainer = document.createElement('div');
        trayContainer.className = 'tray-container';

        const foodTray = document.createElement('div');
        foodTray.className = 'food-tray';

        const filteredItems = filterMenuItems(menu.menuItems);
        const distributedMenus = distributeMenuItems(filteredItems);

        distributedMenus.forEach((sectionItems, index) => {
          const menuSection = document.createElement('div');
          menuSection.className = `menu-section ${index === 0 ? 'main-dish' : ''}`;

          if (sectionItems.length > 0) {
            sectionItems.forEach(item => {
              const menuItem = document.createElement('div');
              menuItem.className = 'menu-item-text';
              menuItem.textContent = item;
              menuSection.appendChild(menuItem);
            });
          } else {
            const emptyItem = document.createElement('div');
            emptyItem.className = 'menu-item-text empty';
            emptyItem.textContent = '-';
            menuSection.appendChild(emptyItem);
          }

          foodTray.appendChild(menuSection);
        });

        trayContainer.appendChild(foodTray);
        restaurantCard.appendChild(trayContainer);
        restaurantsGrid.appendChild(restaurantCard);
      });

      stackContainer.appendChild(restaurantsGrid);

      const cardControls = document.createElement('div');
      cardControls.className = 'card-controls';

      const prevBtn = document.createElement('button');
      prevBtn.className = 'card-nav-btn prev-btn';
      prevBtn.innerHTML = '←';
      prevBtn.onclick = () => prevCard();

      const nextBtn = document.createElement('button');
      nextBtn.className = 'card-nav-btn next-btn';
      nextBtn.innerHTML = '→';
      nextBtn.onclick = () => nextCard(dayData.menus.length);

      cardControls.appendChild(prevBtn);
      cardControls.appendChild(nextBtn);

      const indicators = document.createElement('div');
      indicators.className = 'card-indicators';

      dayData.menus.forEach((_, index) => {
        const indicator = document.createElement('div');
        indicator.className = 'card-indicator';
        indicator.onclick = () => goToCard(index);
        indicators.appendChild(indicator);
      });

      container.appendChild(stackContainer);
      container.appendChild(cardControls);
      container.appendChild(indicators);

      setTimeout(() => updateCardStack(dayData.menus.length), 100);
    }

    loadAiRating(dayData.dotw);
  }

  async function loadAiRating(dayName) {
    const apiEndpoint = dayApiMapping[dayName];
    const ratingSection = document.querySelector('.rating-section');
    const starsContainer = ratingSection.querySelector('.stars');
    const ratingText = ratingSection.querySelector('.rating-text');

    const response = await fetch(`/ai/${apiEndpoint}`);
    const rating = parseInt((await response.text()).trim());

    if (rating >= 1 && rating <= 5) {
      ratingSection.className = 'rating-section loaded';
      updateStars(starsContainer, rating);
      ratingText.textContent = `${rating}/5`;
      ratingText.className = 'rating-text loaded';
    } else {
      ratingSection.className = 'rating-section error';
      ratingText.textContent = '평가 실패';
      ratingText.className = 'rating-text error';
    }
  }

  function showDay(dayName) {
    if (!menuData) return;

    const dayData = menuData.menuDataList.find(day => day.dotw === dayName);
    if (dayData) {
      document.querySelectorAll('.day-tab').forEach(tab => tab.classList.remove('active'));
      document.querySelector(`[data-day="${dayName}"]`).classList.add('active');

      document.getElementById('skeleton').style.display = 'none';
      document.getElementById('dayContent').style.display = 'block';

      renderDayContent(dayData);
      currentDay = dayName;
    }
  }

  async function loadMenuData() {
    document.getElementById('skeleton').style.display = 'block';
    document.getElementById('dayContent').style.display = 'none';

    const response = await fetch('/start');
    menuData = await response.json();
    showDay(currentDay || getTodayKorean());
  }

  document.addEventListener('DOMContentLoaded', () => {
    currentDay = getTodayKorean();

    document.querySelectorAll('.day-tab').forEach(tab => {
      tab.addEventListener('click', () => showDay(tab.dataset.day));
    });

    loadMenuData();
  });
</script>
</body>
</html>